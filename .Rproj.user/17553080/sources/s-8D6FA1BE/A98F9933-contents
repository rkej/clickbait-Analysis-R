---
title: "Clickbait-analysis"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
library(dplyr)
library(ggplot2)
library(stringr)
library(tidyverse)
library(stringi)
```
```{r}
library(qdap)
library(SentimentAnalysis)
```
## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r}
ClickbaitData <- read.csv("dataset.csv")
ClickbaitData2 <- read.csv("clickBait_Data.csv")
ClickbaitData2 <- ClickbaitData2 %>%
  mutate(clickbait = recode(clickbait, `0` = "False", `1` = "True")) %>%
  rename(class = clickbait) %>%
  rename(title = titles)
JoinedData <- merge(x = ClickbaitData, y = ClickbaitData2, by = "title", all = TRUE)
JoinedData %>%
  head()
```


You can also embed plots, for example:
Classifying Data 
```{r}
# analyzing data
IsClickbait <- ClickbaitData %>%
  filter(class != "False")
NotClickbait <- ClickbaitData %>%
  filter(class == "False")
head(NotClickbait)
```
```{r}
ClickbaitLen<- IsClickbait %>%
  mutate(titleLen = stri_length(title))
 
NotClickBaitLen <- ClickbaitData %>%
  mutate(titleLen = stri_length(title))
NotClickBaitLen <- ClickbaitData %>%
  mutate(titleLen = stri_length(title))
NotClickBaitLen %>%
  ggplot(aes(x = class, y = titleLen)) + geom_point()


```
```{r}
NotClickBaitLen %>%
  head(2000) %>%
  group_by(class) %>%
  summarise(dislikeCount = mean(dislikeCount))%>%
  ggplot(aes(x = class, y = dislikeCount)) + geom_bar(stat = "identity")
```
```{r}
NotClickBaitLen %>%
  head(1000) %>%
  ggplot(aes(x = likeCount, y = dislikeCount, shape = class)) + geom_point()
```

```{r}
Not<- NotClickBaitLen %>%
  head(1000) %>%
  mutate(polarity_title = counts(polarity(title))[, "polarity"])
Not %>%
  group_by(class)%>%
  summarise(meanPol = mean(polarity_title))%>%
  ggplot(aes(x = class, y = meanPol)) + geom_bar(stat = "identity")



```

```{r}
#Decision Tree
Not <- Not %>%
  mutate(class = recode(class, `True` = 1, `False` = 0))

mod1 <- party::ctree(
  class ~ polarity_title + likeCount/dislikeCount,
  data=Not) 
plot(mod1, type="simple")
```
